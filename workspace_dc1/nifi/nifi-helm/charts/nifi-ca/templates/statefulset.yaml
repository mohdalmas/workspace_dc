apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "nifi-ca.fullname" . }}
#   namespace: {{ default "default" .Values.global.namespace}}
  labels:
    {{- include "nifi-ca.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  serviceName: {{ include "nifi-ca.name" . }}
  selector:
    matchLabels:
      {{- include "nifi-ca.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "nifi-ca.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "nifi-ca.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext: {{- toYaml .Values.securityContext | nindent 12 }}
            
            #fsGroup: 1000
          ports:
            - containerPort: 9443
              name: ca-client-port
              protocol: TCP
          livenessProbe:
            tcpSocket:
              port: {{ .Values.app_port }}
        #   readinessProbe:
        #     tcpSocket:
        #       port: {{ .Values.app_port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command:
            - bash
            - -c
            - |
              if [ -f config.json ]; then
              OPTIONS="--configJson config.json --useConfigJson"
              fi
              exec /opt/nifi/nifi-toolkit-current/bin/tls-toolkit.sh server -c {{ include "nifi-ca.fullname" . }} -t {{ .Values.global.ca.token }} -p {{ .Values.app_port }} ${OPTIONS}
{{- if .Values.persistence.enabled }}              
          volumeMounts:
          - mountPath: /opt/nifi/nifi-toolkit-current/cert
            name: nifi-ca
          workingDir: /opt/nifi/nifi-toolkit-current/cert
        
  volumeClaimTemplates:
  - metadata:
      name: {{ include "nifi-ca.name" . }}
    spec:
      accessModes:
        {{- range .Values.persistence.accessModes }}
          - {{ . | quote }}
        {{- end }}
      resources:
        {{- toYaml .Values.persistence.resources | nindent 8 }}
      storageClassName: {{ .Values.persistence.storageClass | quote }}
{{- end}}  
