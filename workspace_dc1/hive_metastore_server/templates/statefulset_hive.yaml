apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
    app.kubernetes.io/name: {{ include "hive.name" . }}
    app.kubernetes.io/component: hive-pod
    {{- include "hive.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "hive.name" . }}
      app.kubernetes.io/component: hive-pod
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
  serviceName: {{ .Release.Name }}-service
  replicas: 1
  template:
    metadata:
      annotations:
{{ toYaml .Values.annotations | indent 8 }}
      labels:
        app.kubernetes.io/name: {{ include "hive.name" . }}
        app.kubernetes.io/component: hive-pod
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
    spec:
      serviceAccountName: {{.Values.serviceAccount }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      containers:
      - name: hive-metastore
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        # securityContext:
          # runAsUser: 997
          # allowPrivilegeEscalation: true
        ports:
          - containerPort: 17102
            name: "hive-metastore"
        command:
          - /bin/bash
          - /opt/hive/conf/startup.sh
        env:
{{ toYaml .Values.hive_metastore.extraEnvVars | indent 10 }}
        resources:
{{ toYaml .Values.hive_metastore.resources | indent 10 }}
        volumeMounts:
        - mountPath: /opt/hive/conf/hive-site.xml
          name: hive-config
          subPath: hive-site.xml    
        - mountPath: /opt/spark/conf/hive-site.xml
          name: hive-config
          subPath: hive-site.xml   
        - mountPath: /opt/hive/conf/startup.sh
          name: hive-config
          subPath: startup.sh 
        - mountPath: /opt/spark/conf/spark-defaults.conf
          name: hive-config
          subPath: spark-defaults.conf
        - name: hadoop-config
          mountPath: /opt/hadoop/etc/hadoop
      - name: hive-server
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        # securityContext:
          # runAsUser: 997
          # allowPrivilegeEscalation: true
        ports:
          - containerPort: 17101
            name: "hive-server"
        command:
          - /bin/bash
          - /opt/hive/conf/startup.sh
        env:
{{ toYaml .Values.hive_server.extraEnvVars | indent 10 }}
        resources:
{{ toYaml .Values.hive_server.resources | indent 10 }}
        volumeMounts:
        - mountPath: /opt/hive/conf/hive-site.xml
          name: hive-config
          subPath: hive-site.xml
        - mountPath: /opt/spark/conf/hive-site.xml
          name: hive-config
          subPath: hive-site.xml          
        - mountPath: /opt/hive/conf/startup.sh
          name: hive-config
          subPath: startup.sh 
        - mountPath: /opt/spark/conf/spark-defaults.conf
          name: hive-config
          subPath: spark-defaults.conf
        - name: hadoop-config
          mountPath: /opt/hadoop/etc/hadoop
      - name: hive-spark-master
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        command:
          - /bin/bash
          - /opt/hive/conf/startup.sh
        env:
{{ toYaml .Values.hive_spark_master.extraEnvVars | indent 10 }}
        resources:
{{ toYaml .Values.hive_spark_master.resources | indent 10 }}
        volumeMounts: 
        - mountPath: /opt/hive/conf/startup.sh
          name: hive-config
          subPath: startup.sh 
        - mountPath: /opt/hive/conf/hive-site.xml
          name: hive-config
          subPath: hive-site.xml 
        - mountPath: /opt/spark/conf/hive-site.xml
          name: hive-config
          subPath: hive-site.xml          
        - mountPath: /opt/spark/conf/spark-defaults.conf
          name: hive-config
          subPath: spark-defaults.conf
        - mountPath: /opt/spark/conf/core-site.xml
          name: hadoop-config
          subPath: core-site.xml
        - mountPath: /opt/spark/conf/hdfs-site.xml
          name: hadoop-config
          subPath: hdfs-site.xml
        - mountPath: /opt/spark/conf/yarn-site.xml
          name: hadoop-config
          subPath: yarn-site.xml
        - mountPath: /opt/spark/conf/mapred-site.xml
          name: hadoop-config
          subPath: mapred-site.xml   
      volumes:
      - name: hive-config
        configMap:
          name: {{ include "hive.name" . }}-cm
          items:
          - key: hive-site.xml
            path: hive-site.xml
          - key: spark-defaults.conf
            path: spark-defaults.conf
          - key: startup.sh
            path: startup.sh
      - name: hadoop-config
        configMap:
          {{- if .Values.conf.hadoopConfigMap }}
          name: {{ .Values.conf.hadoopConfigMap }}
          {{- end }}