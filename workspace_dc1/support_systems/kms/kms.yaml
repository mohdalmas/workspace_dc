apiVersion: v1 
kind: Service 
metadata: 
  name: kms-service
spec:
  selector:
    app: kms
  ports:
    - protocol: "TCP"
      port: 8080 
      targetPort: 8080 
  type: LoadBalancer 
  loadBalancerIP: 10.3.41.29 

---
apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  name: kms
spec:
  selector:
    matchLabels:
      app: kms
  replicas: 1 # Number of replicas that will be created for this deployment
  strategy:
    type: Recreate

  template:
    metadata:
      labels:
        app: kms
    spec:
      containers:
        - name: kms 
          image:  kenchir/kms:1.0.2 # Image that will be used to containers in the cluster
          imagePullPolicy: Always
          ports:
            - containerPort: 8080 # The port that the container is running on in the cluster
          resources:
           limits:
            cpu: 100m
            memory: 1G
           requests:
            cpu: 10m
            memory: 500M

          env:
            - name: spring.datasource.url
              value : "jdbc:postgresql://10.3.141.24:5432/admin"
            
            - name: spring.datasource.username
              value: postgres

            - name: spring.datasource.password
              value: postgres
          
          command: ["java","-jar","/app.jar"]

      serviceAccountName: bigdata