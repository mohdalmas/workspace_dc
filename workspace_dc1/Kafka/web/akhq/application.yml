logger:
  levels:
    io.micronaut.configuration.security.ldap: DEBUG
    # root: DEBUG

micronaut:
  security:
    enabled: true
    # token:
    #   jwt:
    #     signatures:
    #       secret:
    #         generator:
    #           secret: pleasechangeme

    endpoints:
      login:
        enabled: true
      logout:
        enabled: true
    # Ldap authenticaton configuration
    ldap:
      default:
        enabled: true
        context:
          server: 'ldap://10.3.108.11:389'
          managerDn: 'CN=Bigdata Service Account,OU=BigData Users,OU=Domain Users,DC=safaricomet,DC=net'
          managerPassword: 'lyOdmSBwCsZnD4dLnOAE'
        search:
          enabled: true
          filter: 'sAMAccountName={0}'
          base: "OU=BigData Users,OU=Domain Users,DC=safaricomet,DC=net"
        groups:
          enabled: true
          subtree: true
          base: "OU=BigData Users,OU=Domain Users,DC=safaricomet,DC=net" 
          filter: 'sAMAccountName={0}'
akhq:
  security:
    # default-group: no-roles

    ldap:
      default-group: topic-reader
      groups:
        - name: group-ldap-1
          groups: # Akhq groups list
            - topic-reader
        - name: group-ldap-2
          groups:
            - admin
        - name: abcd
          groups:
            - adminv
      users:
        - username: Kenneth.Kipkogei
          groups:
            - abcd
            # - topic-reader     
    # default-group: admin # Default groups for all the user even unlogged user

  server:
    access-log: # Access log configuration (optional)
      enabled: true # true by default
      name: org.akhq.log.access # Logger name
      format: "[Date: {}] [Duration: {} ms] [Url: {} {}] [Status: {}] [Ip: {}] [User: {}]" # Logger format
      levels: DEBUG

  # default kafka properties for each clients, available for admin / producer / consumer (optional)
  clients-defaults:
    consumer:
      properties:
        isolation.level: read_committed

  # list of kafka cluster available for akhq
  connections:
    dc1-cluster: # url friendly name for the cluster (letter, number, _, -, ... dot are not allowed here)
      properties: # standard kafka properties (optional)
        bootstrap.servers: "10.3.41.32:9094"
        sasl.jaas.config:  "org.apache.kafka.common.security.scram.ScramLoginModule required username=\"admin\" password=\"cu5RAwn7tk18\";"
        security.protocol: SASL_PLAINTEXT
        sasl.mechanism: SCRAM-SHA-512
        # ssl.truststore.location: /app/truststore.jks


    dc2-cluster:
      properties:
        bootstrap.servers: "10.3.141.30:9094"
        security.protocol: SASL_PLAINTEXT
        sasl.mechanism: SCRAM-SHA-512
        sasl.jaas.config:  "org.apache.kafka.common.security.scram.ScramLoginModule required username=\"admin\" password=\"nv6t5s8EuPJd\";"
        # ssl.truststore.location: /app/truststore.jks


  # Topic list display options (optional)
  topic:
    retention: 172800000 # default retention period when creating topic
    partition: 3 #  default number of partition when creating topic
    replication: 3 # default number of replicas when creating topic
    internal-regexps: # list of regexp to be considered as internal (internal topic can't be deleted or updated)
      - "^_.*$"
      - "^.*_schemas$"
      - "^.*connect-config$"
      - "^.*connect-offsets$1"
      - "^.*connect-status$"
    stream-regexps: # list of regexp to be considered as internal stream topic
      - "^.*-changelog$"
      - "^.*-repartition$"
      - "^.*-rekey$"
    skip-consumer-groups: false # Skip loading consumer group information when showing topics
    skip-last-record: false # Skip loading last record date information when showing topics
    show-all-consumer-groups: false # Expand list of consumer groups instead of showing one.
    # Retry options for topic operations
    retry:
      topic-exists: # Delay between retries when checking for existence of newly created topics. This is needed as it might take the kafka broker a few seconds to create new topics.
        delay: "3s"

  # Topic display data options (optional)
  topic-data:
    size: 50 # max record per page (default: 50)
    poll-timeout: 1000 # The time, in milliseconds, spent waiting in poll if data is not available in the buffer.
    kafka-max-message-length: 1000000 # Max message length allowed to send to UI when retrieving a list of records in bytes.

  # Ui Global Options (optional)
  ui-options:
    topic:
      default-view: ALL  # default list view (ALL, HIDE_INTERNAL, HIDE_INTERNAL_STREAM, HIDE_STREAM). Overrides default
      skip-consumer-groups: false # Skip loading consumer group information when showing topics. Overrides default
      skip-last-record: true  # Skip loading last record date information when showing topics.  Overrides default
      show-all-consumer-groups: true # Expand list of consumer groups instead of showing one. Overrides default.
    topic-data:
      sort: NEWEST # default sort order (OLDEST, NEWEST) (default: OLDEST).  Overrides default

  # Auth & Roles (optional)

    # Groups definition
    groups:

      admin: # unique key
        name: admin # Group name
        roles:  # roles for the group
          - topic/read
          - topic/insert
          - topic/delete
          - topic/config/update
          - node/read
          - node/config/update
          - topic/data/read
          - topic/data/insert
          - topic/data/delete
          - group/read
          - group/delete
          - group/offsets/update
          - registry/read
          - registry/insert
          - registry/update
          - registry/delete
          - registry/version/delete
          - acls/read
          - connect/read
          - connect/insert
          - connect/update
          - connect/delete
          - connect/state/update
        attributes:
          # Regexp list to filter topic available for group
          topics-filter-regexp:
            - "test.*"
          # Regexp list to filter connect configs visible for group
          connects-filter-regexp:
            - "^test.*$"
          # Regexp list to filter consumer groups visible for group
          consumer-groups-filter-regexp:
            - "consumer.*"
      
      topic-reader: # unique key
        name: topic-reader # Other group
        roles:
          - topic/read
        attributes:
           topics-filter-regexp:
            - "test.*"
      
      adminv: # unique key
        name: adminv # Group name
        roles:  # roles for the group
  
          - node/read
          - group/read
          

      
    # Ldap Groups configuration (when using ldap)




