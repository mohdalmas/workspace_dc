replicaCount: 1

image:
  registry: docker.io
  repository: provectuslabs/kafka-ui
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: "latest"

imagePullSecrets:
- name: regcred

nameOverride: ""
fullnameOverride: ""

serviceAccount: 
  # Specifies whether a service account should be created
  create: false
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: "kafka-kafka"

existingConfigMap: ""
existingSecret: ""
envs:
  secret: {}
  config:
    KAFKA_CLUSTERS_0_NAME: "DC1-Kafka"
    KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: "10.3.41.32:9094"
    KAFKA_CLUSTERS_0_PROPERTIES_SECURITY_PROTOCOL: "SASL_PLAINTEXT"
    KAFKA_CLUSTERS_0_PROPERTIES_SASL_MECHANISM: "SCRAM-SHA-512"
    KAFKA_CLUSTERS_0_PROPERTIES_SASL_JAAS_CONFIG: org.apache.kafka.common.security.scram.ScramLoginModule required username="admin" password="cu5RAwn7tk18";
    KAFKA_CLUSTERS_0_READONLY: "true" 
    SPRING_SECURITY_USER_NAME: "admin"
    SPRING_SECURITY_USER_PASSWORD: "password143"
    AUTH_TYPE: "LOGIN_FORM"
    KAFKA_CLUSTERS_1_NAME: "DC1-Kafka-Test"
    KAFKA_CLUSTERS_1_BOOTSTRAPSERVERS: "10.3.41.58:9096"
    # KAFKA_CLUSTERS_1_PROPERTIES_SECURITY_PROTOCOL: "SASL_PLAINTEXT"
    # KAFKA_CLUSTERS_1_PROPERTIES_SASL_MECHANISM: "SCRAM-SHA-512"
    # KAFKA_CLUSTERS_1_PROPERTIES_SASL_JAAS_CONFIG: org.apache.kafka.common.security.scram.ScramLoginModule required username="admin" password="cu5RAwn7tk18";
    # KAFKA_CLUSTERS_1_READONLY: "true" 
    # SPRING_LDAP_URLS: "ldap://safaricomet.net:389"
    # SPRING_LDAP_DN_PATTERN: "CN={0},OU=BigData Users,OU=Domain Users,DC=safaricomet,DC=net"
    # #USER SEARCH FILTER INSTEAD OF DN
    # #SPRING_LDAP_USERFILTER_SEARCHBASE: "OU=BigData Users,OU=Domain Users,DC=safaricomet,DC=net"
    # #SPRING_LDAP_USERFILTER_SEARCHFILTER: "(sAMAccountName={0})"
    # #LDAP ADMIN USER
    # SPRING_LDAP_ADMINUSER: "CN=Bigdata Service Account,OU=BigData Users,OU=Domain Users,DC=safaricomet,DC=net"
    # SPRING_LDAP_ADMINPASSWORD: "lyOdmSBwCsZnD4dLnOAE"
    

networkPolicy:
  enabled: false
  egressRules:
    ## Additional custom egress rules
    ## e.g:
    ## customRules:
    ##   - to:
    ##       - namespaceSelector:
    ##           matchLabels:
    ##             label: example
    customRules: []
  ingressRules:
    ## Additional custom ingress rules
    ## e.g:
    ## customRules:
    ##   - from:
    ##       - namespaceSelector:
    ##           matchLabels:
    ##             label: example
    customRules: []

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  type: ClusterIP
  port: 80
  # if you want to force a specific nodePort. Must be use with service.type=NodePort
  # nodePort:

# Ingress configuration
ingress:
  # Enable ingress resource
  enabled: true

  # Annotations for the Ingress
  annotations:
    ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: nginx

  # ingressClassName for the Ingress
  ingressClassName: "nginx"

  # The path for the Ingress
  path: "/"

  # The hostname for the Ingress
  host: "kafkaui.big-data.safaricomet.net"

  # configs for Ingress TLS
  tls:
    # Enable TLS termination for the Ingress
    enabled: false
    # the name of a pre-created Secret containing a TLS private key and certificate
    secretName: ""

  # HTTP paths to add to the Ingress before the default path
  precedingPaths: []

  # Http paths to add to the Ingress after the default path
  succeedingPaths: []

resources:
  limits:
    cpu: 200m
    memory: 512Mi
  requests:
    cpu: 200m
    memory: 256Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
