#!/bin/sh -e

prop_replace () {
    target_file=${NIFI_HOME}/conf/${3:-nifi.properties}
    echo "updating ${1} in ${target_file}"
    if egrep "^${1}=" ${target_file} &> /dev/null; then
        sed -i -e "s|^$1=.*$|$1=$2|"  ${target_file}
    else
        echo ${1}=${2} >> ${target_file}
    fi
}

mkdir -p ${NIFI_HOME}/config-data/conf
{{- if .Values.sts.useHostNetwork }}
FQDN="0.0.0.0"
{{- else }}
FQDN=$(hostname -f)
{{- end }}

cat "${NIFI_HOME}/conf/nifi.temp" > "${NIFI_HOME}/conf/nifi.properties"

{{- if .Values.auth.ldap.enabled }}
cat "${NIFI_HOME}/conf/authorizers.temp" > "${NIFI_HOME}/conf/authorizers.xml"
cat "${NIFI_HOME}/conf/login-identity-providers-ldap.xml" > "${NIFI_HOME}/conf/login-identity-providers.xml"
{{- end }}

prop_replace nifi.remote.input.host ${FQDN}
prop_replace nifi.cluster.node.address ${FQDN}
prop_replace nifi.web.https.host ${FQDN}

{{- if .Values.properties.webProxyHost }}
# Update nifi.properties for web ui proxy hostname
prop_replace nifi.web.proxy.host {{ .Values.properties.webProxyHost }}
{{- else }}
prop_replace nifi.web.proxy.host {{ template "apache-nifi.fullname" . }}.{{ .Release.Namespace }}.svc
{{- end }}

# Run the tls-toolkit in client mode to generate the truststore and keystore
/opt/nifi/nifi-toolkit-current/bin/tls-toolkit.sh client -c {{ .Values.ca.server }} -t {{ .Values.ca.token }} --dn "CN=$(hostname -f), OU=${OU:-BIGDATA}" -p {{.Values.ca.service.port}}

# Use jq to extract the passwords form the config.json generated by the tls-toolkit
KEYSTORE_PASSWORD=`jq -r '.keyStorePassword' ./config.json`
KEY_PASSWORD=`jq -r '.keyPassword' ./config.json`
TRUSTSTORE_PASSWORD=`jq -r '.trustStorePassword' ./config.json`

mv ./keystore.jks conf/
mv ./truststore.jks conf/

# Perform idempotent changes of configuration to support secure environments
echo 'Configuring environment with SSL settings'

export nifi_props_file=/${NIFI_HOME}/conf/nifi.properties

prop_replace 'nifi.security.keystorePasswd'     "${KEYSTORE_PASSWORD}"
prop_replace 'nifi.security.keyPasswd'          "${KEY_PASSWORD:-$KEYSTORE_PASSWORD}"
prop_replace 'nifi.security.truststorePasswd'   "${TRUSTSTORE_PASSWORD}"

# Continuously provide logs so that 'docker logs' can produce them
"${NIFI_HOME}/bin/nifi.sh" run &
nifi_pid="$!"
tail -F --pid=${nifi_pid} "${NIFI_HOME}/logs/nifi-app.log" &

trap 'echo Received trapped signal, beginning shutdown...;./bin/nifi.sh stop;exit 0;' TERM HUP INT;
trap ":" EXIT

echo NiFi running with PID ${nifi_pid}.
wait ${nifi_pid}