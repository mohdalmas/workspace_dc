apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: schema-registry
  name: schema-registry
spec:
  securityContext:
    runAsUser: 0
  replicas: 1
  selector:
    matchLabels:
      app: schema-registry
  strategy: {}
  template:
    metadata:
      labels:
        app: schema-registry
    spec:
      containers:
      - image: kapkiai/schema-registry:1.0.1
        name: schema-registry
        resources: 
          requests:
            cpu: "1"
            memory: "2Gi"
            ephemeral-storage: "2Gi"
          limits:
            cpu: "2"
            memory: "3Gi"
            ephemeral-storage: "3Gi"
        ports:
        - containerPort: 8445
          name: https-port
        - containerPort: 8446
          name: ssh
        env:
          - name: CONFIG_FILE
            value: /opt/conf/registry.yaml
        volumeMounts:
          # - mountPath: /opt/conf
          #   name: schema-config
            # subPath: registry.yaml
          - mountPath: /opt/config
            name: config-dir
      initContainers:
        - name: cert-fetcher
          image: kapkiai/nifi-toolkit:1.15.1
          command: 
          - "sh"
          - "-c"
          - |

            prop_replace () {
              target_file=/opt/config/registry.yaml
              echo "updating ${1} in ${target_file}"
              if egrep "^${1}:" ${target_file} &> /dev/null; then
                  sed -i -e "s|^$1:.*$|$1:$2|"  ${target_file}
              else
                  echo ${1}=${2} >> ${target_file}
              fi }
              

            /opt/nifi/nifi-toolkit-current/bin/tls-toolkit.sh client -c nifi-ca-cs -t 1234578912345678912 --dn "CN=$(hostname -f), OU=${OU:-BIGDATA}" -p 9443

            # Use jq to extract the passwords form the config.json generated by the tls-toolkit
            KEYSTORE_PASSWORD=`jq -r '.keyStorePassword' ./config.json`
            TRUSTSTORE_PASSWORD=`jq -r '.trustStorePassword' ./config.json`

            cat /opt/conf/registry.yaml > /opt/config/registry.yaml

            mv ./keystore.jks /opt/config/
            mv ./truststore.jks /opt/config/

            prop_replace keyStorePath /opt/config/keystore.jks
            prop_replace keyStorePassword ${KEYSTORE_PASSWORD}

          volumeMounts:
            - mountPath: /opt/conf/registry.yaml
              name: schema-config
              subPath: registry.yaml
            - mountPath: /opt/config
              name: config-dir

          
      volumes:
        - emptyDir:
            medium: Memory
            sizeLimit: 2Gi
          name: config-dir
        - name: schema-config
          configMap:
            name: schema-config
            items:
              - key: registry-dev-ssl.yaml
                path: registry.yaml
        

