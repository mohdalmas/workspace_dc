---
apiVersion: apps/v1
kind: Deployment # Kubernetes resource kind we are creating
metadata:
  labels:
    app: kms
  name: kms
spec:
  selector:
    matchLabels:
      app: kms
  replicas: 1 # Number of replicas that will be created for this deployment
  template:
    metadata:
      labels:
        app: kms
    spec:
      containers:
        - name: kms 
          image:  kenchir/kms:1.1.0-alpha # Image that will be used to containers in the cluster
          imagePullPolicy: Always
          ports:
            - containerPort: 8080 # The port that the container is running on in the cluster
          resources:
           limits:
            cpu: 100m
            memory: 2G
           requests:
            cpu: 10m
            memory: 500M

          env:
            - name: server.port
              value: "8080"

            - name: ldap.userDn 
              value: "CN=BigData Admin,OU=Blueprint Service Accounts,OU=Blueprint,DC=blueprint,DC=lab"

            - name: ldap.bind.password
              value: cA6gYsJNL4meJJ6elyoc

            - name: ldap.url
              value: "ldap://blueprint.lab:389" 

            - name: ldap.userSearchBase
              value: "OU=Blueprint,DC=blueprint,DC=lab"

            - name: ldap.userSearchFilter
              value: sAMAccountName={0}  

            - name: ldap.filter
              value: sAMAccountName

            - name: ldap.rawIdentityStrategy
              value: USE_USERNAME

            - name: spring.datasource.url
              value : "jdbc:postgresql://192.168.21.19:5432/admin"
            
            - name: spring.datasource.username
              value: postgres

            - name: spring.datasource.password
              valueFrom:
                secretKeyRef:
                  name: bigdata-psql-postgresql
                  key: postgresql-password
          
          command: ["java","-jar","/app.jar"]
          volumeMounts:
          - mountPath: /logs
            name: logs
      volumes:
      - name: logs
        emptyDir: {}
      serviceAccountName: bigdata
      imagePullSecrets:
        - name: regcred
---
apiVersion: v1 
kind: Service 
metadata: 
  name: kms-service
spec:
  type: LoadBalancer
  ports:
    - protocol: "TCP"
      port: 8080 
      targetPort: 8080 
  selector:
    app: kms
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  annotations:
    ingress.kubernetes.io/rewrite-target: /
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/backend-protocol: HTTPS
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"

  labels:
    name: kms-api-ingress
  name: kms-api-ingress
spec:
  rules:
    - host: kms.bigdata.blueprint.lab
      http:
        paths:
          - backend:
              service:
                name:  kms-service
                port:
                  number: 8080
            path: /
            pathType: ImplementationSpecific
