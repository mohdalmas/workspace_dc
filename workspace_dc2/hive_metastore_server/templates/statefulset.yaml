apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}
  labels:
    app.kubernetes.io/name: {{ include "hive.name" . }}
    app.kubernetes.io/component: hive
    {{- include "hive.labels" . | nindent 4 }}
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "hive.name" . }}
      app.kubernetes.io/component: hive
      app.kubernetes.io/instance: {{ .Release.Name | quote }}
  serviceName: {{ .Release.Name }}-service
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "hive.name" . }}
        app.kubernetes.io/component: hive
        app.kubernetes.io/instance: {{ .Release.Name | quote }}
    spec:
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
      containers:
      - name: hive-metastore
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        # securityContext:
          # runAsUser: 997
          # allowPrivilegeEscalation: true
        command:
          - /bin/bash
          - /opt/hive/conf/startup.sh
        env:
        - name: HIVE_MODE
          value: "metastore"
        - name: HADOOP_USER_NAME
          value: "hive"
        - name: SPARK_MASTER_HOST
          value: hive-0
        - name: SPARK_MASTER_URL
          value: spark://hive-0:7077
        resources:
{{ toYaml .Values.hive_metastore.resources | indent 10 }}
        volumeMounts:
        - mountPath: /opt/hive/conf/hive-site.xml
          name: hive-config
          subPath: hive-site.xml    
        - mountPath: /opt/spark/conf/hive-site.xml
          name: hive-config
          subPath: hive-site.xml   
        - mountPath: /opt/hive/conf/startup.sh
          name: hive-config
          subPath: startup.sh 
        - mountPath: /opt/spark/conf/spark-defaults.conf
          name: hive-config
          subPath: spark-defaults.conf
        - name: hadoop-config
          mountPath: /opt/hadoop/etc/hadoop
      - name: hive-server
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        # securityContext:
          # runAsUser: 997
          # allowPrivilegeEscalation: true
        command:
          - /bin/bash
          - /opt/hive/conf/startup.sh
        env:
        - name: HIVE_MODE
          value: "server"
        - name: HADOOP_USER_NAME
          value: "hive"
        - name: SPARK_MASTER_HOST
          value: hive-0
        - name: SPARK_MASTER_URL
          value: spark://hive-0:7077
        resources:
{{ toYaml .Values.hive_server.resources | indent 10 }}
        volumeMounts:
        - mountPath: /opt/hive/conf/hive-site.xml
          name: hive-config
          subPath: hive-site.xml
        - mountPath: /opt/spark/conf/hive-site.xml
          name: hive-config
          subPath: hive-site.xml          
        - mountPath: /opt/hive/conf/startup.sh
          name: hive-config
          subPath: startup.sh 
        - mountPath: /opt/spark/conf/spark-defaults.conf
          name: hive-config
          subPath: spark-defaults.conf
        - name: hadoop-config
          mountPath: /opt/hadoop/etc/hadoop
      - name: hive-spark-master
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        env:
        - name: SPARK_MODE
          value: "master"
        - name: HADOOP_USER_NAME
          value: "hive"
        - name: SPARK_MASTER_HOST
          value: hive-0
        - name: SPARK_MASTER_URL
          value: spark://hive-0:7077
        resources:
{{ toYaml .Values.hive_spark_master.resources | indent 10 }}
        volumeMounts:
        - mountPath: /opt/hive/conf/hive-site.xml
          name: hive-config
          subPath: hive-site.xml   
        - mountPath: /opt/spark/conf/hive-site.xml
          name: hive-config
          subPath: hive-site.xml          
        - mountPath: /opt/hive/conf/startup.sh
          name: hive-config
          subPath: startup.sh 
        - mountPath: /opt/spark/conf/spark-defaults.conf
          name: hive-config
          subPath: spark-defaults.conf
        - name: hadoop-config
          mountPath: /opt/hadoop/etc/hadoop
      - name: hive-spark-worker-1
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        env:
        - name: SPARK_MODE
          value: "worker"
        - name: HADOOP_USER_NAME
          value: "hive"
        - name: SPARK_MASTER_HOST
          value: hive-0
        - name: SPARK_MASTER_URL
          value: spark://hive-0:7077
        - name: SPARK_EXECUTION_CORES
          value: "4"
        resources:
{{ toYaml .Values.hive_spark_worker.resources | indent 10 }}
        volumeMounts:
        - mountPath: /opt/hive/conf/hive-site.xml
          name: hive-config
          subPath: hive-site.xml  
        - mountPath: /opt/spark/conf/hive-site.xml
          name: hive-config
          subPath: hive-site.xml           
        - mountPath: /opt/hive/conf/startup.sh
          name: hive-config
          subPath: startup.sh 
        - mountPath: /opt/spark/conf/spark-defaults.conf
          name: hive-config
          subPath: spark-defaults.conf
        - name: hadoop-config
          mountPath: /opt/hadoop/etc/hadoop
      - name: hive-spark-worker-2
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        env:
        - name: SPARK_MODE
          value: "worker"
        - name: HADOOP_USER_NAME
          value: "hive"
        - name: SPARK_MASTER_HOST
          value: hive-0
        - name: SPARK_MASTER_URL
          value: spark://hive-0:7077
        - name: SPARK_EXECUTION_CORES
          value: "4"
        resources:
{{ toYaml .Values.hive_spark_worker.resources | indent 10 }}
        volumeMounts:
        - mountPath: /opt/hive/conf/hive-site.xml
          name: hive-config
          subPath: hive-site.xml  
        - mountPath: /opt/spark/conf/hive-site.xml
          name: hive-config
          subPath: hive-site.xml           
        - mountPath: /opt/hive/conf/startup.sh
          name: hive-config
          subPath: startup.sh 
        - mountPath: /opt/spark/conf/spark-defaults.conf
          name: hive-config
          subPath: spark-defaults.conf
        - name: hadoop-config
          mountPath: /opt/hadoop/etc/hadoop
      - name: hive-spark-worker-3
        image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
        imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
        env:
        - name: SPARK_MODE
          value: "worker"
        - name: HADOOP_USER_NAME
          value: "hive"
        - name: SPARK_MASTER_HOST
          value: hive-0
        - name: SPARK_MASTER_URL
          value: spark://hive-0:7077
        - name: SPARK_EXECUTION_CORES
          value: "4"
        resources:
{{ toYaml .Values.hive_spark_worker.resources | indent 10 }}
        volumeMounts:
        - mountPath: /opt/hive/conf/hive-site.xml
          name: hive-config
          subPath: hive-site.xml  
        - mountPath: /opt/spark/conf/hive-site.xml
          name: hive-config
          subPath: hive-site.xml           
        - mountPath: /opt/hive/conf/startup.sh
          name: hive-config
          subPath: startup.sh 
        - mountPath: /opt/spark/conf/spark-defaults.conf
          name: hive-config
          subPath: spark-defaults.conf
        - name: hadoop-config
          mountPath: /opt/hadoop/etc/hadoop          
      volumes:
      - name: hive-config
        configMap:
          name: {{ include "hive.name" . }}-cm
          items:
          - key: hive-site.xml
            path: hive-site.xml
          - key: spark-defaults.conf
            path: spark-defaults.conf
          - key: startup.sh
            path: startup.sh
      - name: hadoop-config
        configMap:
          {{- if .Values.conf.hadoopConfigMap }}
          name: {{ .Values.conf.hadoopConfigMap }}
          {{- end }}