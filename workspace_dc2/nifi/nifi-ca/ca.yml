apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: nifi-ca
  labels:
    app: nifi-ca
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nifi-ca
  serviceName: nifi
  template:
    metadata:
      labels:
        app: nifi-ca
    spec:
      imagePullSecrets:
      - name: regcred
      serviceAccountName: bigdata
      containers:
        - name: nifi-ca
          image: et02-harbor.safaricomet.net/bigdata/nifi-toolkit:1.16.3
          securityContext:
            runAsUser: 0
            #fsGroup: 1000
          ports:
            - containerPort: 9443
              name: ca-client-port
          command:
            - bash
            - -c
            - |
              if [ -f /opt/nifi/nifi-toolkit-current/cert/config.json ]; then
              OPTIONS="--configJson /opt/nifi/nifi-toolkit-current/cert/config.json --useConfigJson"
              fi
              exec /opt/nifi-toolkit/nifi-toolkit-1.16.3/bin/tls-toolkit.sh server -c nifi-ca-cs -t "1234578912345678912" ${OPTIONS}
          volumeMounts:
          - mountPath: /opt/nifi/nifi-toolkit-current/cert
            name: nifi-ca
          workingDir: /opt/nifi/nifi-toolkit-current/cert
  volumeClaimTemplates:
  - metadata:
      name: nifi-ca
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 200Mi
        limits:
          storage: 300Mi
      storageClassName: topology-aware-standard
---
# Create service for the nifi-ca replica set
apiVersion: v1
kind: Service
metadata:
  name: nifi-ca-cs
  labels:
    app: nifi-ca
spec:
  ports:
    - port: 9443
      name: ca-client-port
      targetPort: 9443
  selector:
    app: nifi-ca